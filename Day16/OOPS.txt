OOPs is a methid of programming, that uses objects to respect real-World Enteties.

It combines data (Attributes) and bahaviour (Methods) in a single unit.

        *class
        *object
        *Encapsulation
        *Inheritence
        *Polymorphism
        *Abstraction


*class is a blueprint for creating an object it creates attribute and behaviour.
        vlass car{
            .
            .
            .
            .
            void(or)int run(){
            .
            .
            .
            .return run;
            }
        }


2 OBJECT:
It is an instance of a class

        car c = new car();

3 ENCAPCULATION:
//basic Encapsulation 
        package Day17;
        import java.util.*;
        class car{
        String car;
        int model;
        void display(){
        System.out.println("Brand :"+car);
        System.out.println("model:"+model);

                        }
        }

        public class Demo1 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        car c1 = new car();
        System.out.println("Eneter the car name:");
        c1. car = sc.nextLine();
        System.out.println("Enter the Car model:");
        c1.model = sc.nextInt();
        c1.display();
    }
}

single inheritance:
1 parent --> 1 child

MultiLevel Inheritance:
1 grandparent --> 1 child --> 1 grandchild


Multiple Inheritance:

2 parents --> 1 Child
interface and implements are the key words used in it.. 
The interface we used to use instead of class.
implements are the keyword used instead of extendss...   
the interface it doesn't hold the body..
Default is an another kyword used in parent class


Hierarchial Inheritence:
 1 parent -->many child 

 Hybrid Inheritance:
 combination of DIFFERNT types of inheritencee..
 many parent --> 1 child        



POLYMORPHISM:
 in  java Polymorphism means many forms..
        * it allows one interface to be used for a general class of action..
        * The specific action is Detrmine wheather the excate nature of the situation.

        POLYMORPHISM Definition::

        *A single function operator (or) Object can behave Diffently in different situations..

Types of Polymorphism:
*Compile Time Polymorphism      (Method OverLoading or static Binding)
*Run Time Polymorphism          (Method OverRiding or Dynamic Binding)

*Method OverLoading:
        Multiple methods with Same name, But different Parameter List.
        The Return type may be Same or Different but Parameter must be Different.
        It has to be done Between the Same  Class.
        It helps in code readiblity and flexibility.

*Method OverRiding:
        A sub-Class Re-Defining a method already Present in the parent class.
        The method name,Return Type, Parameters Must be Same in both in parent and Child class.
        It helps in Achiving in Dynamic behaviour and Code Re-Usability.
        
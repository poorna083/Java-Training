Mini Atm Project
Ramesh opened a bank account and was given a unique account number.
His account balance was kept private so that nobody could access it directly.
Whenever Ramesh wanted to deposit money, he used the bank’s secure method, which checked if the amount was valid before adding it.
When he needed to withdraw money, the bank system verified his balance to ensure he had enough funds before allowing the withdrawal.
If he tried to withdraw more than his balance, the system immediately rejected the request with a warning.
Ramesh could always check his current balance using a safe method that only displayed the stored value.
In this way, the bank application ensured that his sensitive details like balance were protected but still accessible through controlled operations.
This gave Ramesh confidence that his money was secure, and the system was trustworthy.

Input Format
First line → Account Number (public, directly stored).
Second line → Account Holder Name (set using setter).
Third line → Initial Deposit Amount (set using setter with validation).
Fourth line → Withdraw Amount (set using setter with validation).


Output Format
Account Number: <account_number>
Account Holder: <account_holder_name>
Deposited: <deposit_amount>
Withdrawn: <withdraw_amount OR error_message>
Current Balance: <final_balance>

Test Cases 
Sample Input 1
2001
Ramesh
5000
2000

Sample Output 1
Account Number: 2001
Account Holder: Ramesh
Deposited: 5000.0
Withdrawn: 2000.0
Current Balance: 3000.0

Sample Input 2
2002
Suresh
4000
6000

Sample Output 2
Account Number: 2002
Account Holder: Suresh
Deposited: 4000.0
Insufficient Balance! Withdrawal Failed
Current Balance: 4000.0